plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'com.google.dagger.hilt.android'
    id("com.google.devtools.ksp")
}

android {
    compileSdk 33

    def localProperties = new Properties()
    localProperties.load(new FileInputStream(rootProject.file("local.properties")))

    def keystorePropertiesFile = file(localProperties.getProperty('keystore.properties'))
    def keystoreProperties = new Properties()
    try {
        keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
    }
    catch (FileNotFoundException e) {
        keystoreProperties = null
    }

    signingConfigs {
        config {
            if (keystoreProperties != null) {
                storeFile file(keystoreProperties['storeFile'])
                storePassword keystoreProperties['storePassword']
                keyAlias keystoreProperties['keyAlias']
                keyPassword keystoreProperties['keyPassword']
            }
        }
    }

    defaultConfig {
        applicationId "org.andan.android.tvbrowser.sonycontrolplugin"
        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion
        versionCode 31
        versionName "@string/app_version"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
        compileSdkPreview = "UpsideDownCake"
    }

    buildTypes {
        release {
            // debuggable true
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.txt'
            signingConfig signingConfigs.config
        }
        debug {
            //minifyEnabled true
        }
    }
    compileOptions {
        sourceCompatibility = 17
        targetCompatibility = 17
    }
    buildToolsVersion = '33.0.2'
    kotlinOptions {
        jvmTarget = 17
    }

    buildFeatures {
        compose true
        viewBinding true
        aidl true
    }

    composeOptions {
        kotlinCompilerExtensionVersion = '1.5.3'
    }

    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
    namespace 'org.andan.android.tvbrowser.sonycontrolplugin'
    sourceSets {
        main {
            assets {
                srcDirs 'src\\main\\assets', 'src\\androidTest\\assets'
            }
        }
    }


}

dependencies {

    implementation 'androidx.test:core-ktx:1.5.0'
    implementation 'androidx.test.ext:junit-ktx:1.1.5'
    def composeBom = platform('androidx.compose:compose-bom:2023.10.00')
    implementation composeBom
    androidTestImplementation composeBom
    androidTestImplementation 'androidx.test:runner:1.1.0'
    debugImplementation("androidx.compose.ui:ui-tooling")
    implementation("androidx.compose.ui:ui-tooling-preview")

    // Material3
    implementation 'androidx.compose.material3:material3'

    // Optional - Integration with LiveData
    implementation 'androidx.compose.runtime:runtime-livedata'

    // Android Studio Preview support
    //implementation 'androidx.compose.ui:ui-tooling-preview'
    //debugImplementation 'androidx.compose.ui:ui-tooling'

    // UI Tests
    //androidTestImplementation 'androidx.compose.ui:ui-test-junit4'
    //debugImplementation 'androidx.compose.ui:ui-test-manifest'


    implementation 'androidx.hilt:hilt-navigation-compose:1.1.0-alpha01'
    implementation 'com.google.dagger:hilt-android:2.48.1'
    kapt 'com.google.dagger:hilt-compiler:2.48.1'

    implementation 'com.google.accompanist:accompanist-appcompat-theme:0.30.0'
    implementation 'com.google.accompanist:accompanist-swiperefresh:0.30.0'

    implementation 'com.google.android.gms:play-services-oss-licenses:17.0.1'

    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'androidx.core:core-ktx:1.10.1'

    def lifecycle_version = '2.6.2'

    // ViewModel
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    // ViewModel utilities for Compose
    implementation "androidx.lifecycle:lifecycle-viewmodel-compose:$lifecycle_version"
    // LiveData
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    // Lifecycles only (without ViewModel or LiveData)
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version"

    // Saved state module for ViewModel
    implementation "androidx.lifecycle:lifecycle-viewmodel-savedstate:$lifecycle_version"

    implementation "androidx.lifecycle:lifecycle-runtime-compose:$lifecycle_version"

    // Annotation processor
    kapt "androidx.lifecycle:lifecycle-common:$lifecycle_version"

    // Datastore
    implementation("androidx.datastore:datastore-preferences:1.0.0")

    //Room
    def room_version = '2.5.2'

    implementation("androidx.room:room-runtime:$room_version")
    testImplementation "androidx.room:room-testing:$room_version"
    //annotationProcessor("androidx.room:room-compiler:$room_version")

    // To use Kotlin Symbol Processing (KSP)
    ksp("androidx.room:room-compiler:$room_version")

    // optional - Kotlin Extensions and Coroutines support for Room
    implementation("androidx.room:room-ktx:$room_version")

    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.7.3'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.7.3'

    androidTestImplementation 'app.cash.turbine:turbine:1.0.0'
    androidTestImplementation 'androidx.test:runner:1.5.2'

    // 3rd party
    // HTTP client - Retrofit with OkHttp
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    // JSON converter Gson for JSON to Java object mapping
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    testImplementation('com.squareup.okhttp3:mockwebserver:5.0.0-alpha.11')
    implementation 'com.squareup.okhttp3:logging-interceptor:5.0.0-alpha.11'
    //kapt 'com.google.dagger:dagger-compiler:2.43.1'
    implementation 'com.jakewharton.timber:timber:5.0.1'

    implementation fileTree(dir: 'libs', include: ['*.aar', '*.jar'], exclude: [])
}

kapt {
    correctErrorTypes true
}